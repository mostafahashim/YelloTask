plugins {
    id 'com.android.application'

    id 'kotlin-android'

    id 'kotlin-android-extensions'

    id 'kotlin-kapt'

    id 'org.jetbrains.kotlin.android.extensions'
}

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.3"
    buildFeatures{
        dataBinding = true
        // for view binding :
        viewBinding = true
    }

    defaultConfig {
        applicationId "yello.emitter"
        minSdkVersion 17
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            manifestPlaceholders = [usesCleartextTraffic: "true"]
        }
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            manifestPlaceholders = [usesCleartextTraffic: "true"]
        }
    }

    androidExtensions {
        experimental = true
    }

    lintOptions {
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }
    compileOptions {
//        targetCompatibility JavaVersion.VERSION_1_8
//        sourceCompatibility = JavaVersion.VERSION_1_8
        sourceCompatibility = "1.8"
        targetCompatibility = "1.8"
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }
    configurations.all() {
        resolutionStrategy.force "org.antlr:antlr4-runtime:4.7.1"
        resolutionStrategy.force "org.antlr:antlr4-tool:4.7.1"
    }
}

repositories {
    google()
    jcenter()
    maven { url "https://maven.google.com" }
    maven { url 'https://jitpack.io' }
    flatDir { dirs 'libs' }
}

dependencies {

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.5.0'
    implementation 'androidx.appcompat:appcompat:1.3.0'
    implementation 'com.google.android.material:material:1.3.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
    implementation 'androidx.activity:activity-ktx:1.3.0-alpha08'
    implementation 'androidx.fragment:fragment-ktx:1.3.4'
    implementation 'androidx.swiperefreshlayout:swiperefreshlayout:1.1.0'

    // retrofit2
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    //rx java,kotlin and android
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'
    //LiveData & ViewModel
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.3.1'
    //okhttp3
    implementation("com.squareup.okhttp3:okhttp:3.12.2") {
        force = true
    }
    implementation "com.squareup.okhttp3:logging-interceptor:4.8.1"
    implementation "com.squareup.okhttp3:okhttp-urlconnection:4.4.1"

    //glide
    implementation 'jp.wasabeef:glide-transformations:4.0.1'
    // If you want to use the GPU Filters
    implementation 'jp.co.cyberagent.android.gpuimage:gpuimage-library:1.4.1'
    implementation 'com.github.bumptech.glide:okhttp3-integration:4.11.0@aar'
    implementation 'com.github.bumptech.glide:glide:4.12.0'
    kapt 'com.github.bumptech.glide:compiler:4.11.0'
    //multidex
    implementation 'androidx.multidex:multidex:2.0.1'
    //firebase
    implementation 'com.google.firebase:firebase-messaging:22.0.0'
    //progress loader
    implementation 'com.wang.avi:library:2.1.3'
}